DROP TABLE PROJECT_DETAIL;
DROP TABLE PROJECT;
DROP TABLE DOCUMENT_DETAIL;
DROP TABLE DETAIL_STATUS;
DROP TABLE DOCUMENT;
DROP TABLE USER_ROLES;
DROP TABLE USERS;
DROP TABLE ROLES;


CREATE TABLE ROLES
(
    ID   NUMBER(3) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 999 INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL,
    NAME VARCHAR2(20 BYTE) NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO ROLES(NAME)
VALUES ('ROLE_ADMIN');
INSERT INTO ROLES(NAME)
VALUES ('ROLE_VALIDATOR');
INSERT INTO ROLES(NAME)
VALUES ('ROLE_USER');
COMMIT;

CREATE TABLE USERS
(
    ID       NUMBER(10) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE,
    NAME     VARCHAR2(20)        NOT NULL,
    PASSWORD VARCHAR2(60)        NOT NULL,
    EMAIL    VARCHAR2(50)        NOT NULL ENABLE,
    ACTIVE   NUMBER(1) DEFAULT 1 NOT NULL ENABLE,
    PRIMARY KEY (ID)
);

INSERT INTO USERS (NAME, PASSWORD, EMAIL, ACTIVE) (SELECT NAME, PASSWORD, EMAIL, ACTIVE FROM USERS_BACKUP);
COMMIT;

CREATE TABLE USER_ROLES
(
    USER_ID NUMBER(10) NOT NULL,
    ROLE_ID NUMBER(10) NOT NULL,
    CONSTRAINT FK_ROLES FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ID),
    CONSTRAINT FK_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);


INSERT INTO "BOLPHI"."USER_ROLES" (USER_ID, ROLE_ID)
VALUES ('3', '1');
INSERT INTO "BOLPHI"."USER_ROLES" (USER_ID, ROLE_ID)
VALUES ('4', '2');
INSERT INTO "BOLPHI"."USER_ROLES" (USER_ID, ROLE_ID)
VALUES ('1', '3');
INSERT INTO "BOLPHI"."USER_ROLES" (USER_ID, ROLE_ID)
VALUES ('2', '3');
INSERT INTO "BOLPHI"."USER_ROLES" (USER_ID, ROLE_ID)
VALUES ('5', '3');
COMMIT;

CREATE TABLE DOCUMENT
(
    ID            NUMBER(10, 0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE,
    NAME          VARCHAR2(100 BYTE) NOT NULL,
    DOCUMENT_TYPE VARCHAR2(100),
    CONTENTS      BLOB,
    OWNER_ID      NUMBER(10, 0)
);

ALTER TABLE DOCUMENT
    ADD PRIMARY KEY (ID);

ALTER TABLE DOCUMENT
    ADD CONSTRAINT FK_DOCUMENT_OWNER FOREIGN KEY (OWNER_ID) REFERENCES USERS (ID);

CREATE TABLE DETAIL_STATUS
(
    ID   NUMBER(3) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 999 INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL,
    NAME VARCHAR2(20 BYTE) NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO DETAIL_STATUS(NAME)
VALUES ('NEW');
INSERT INTO DETAIL_STATUS(NAME)
VALUES ('VALIDATED');
INSERT INTO DETAIL_STATUS(NAME)
VALUES ('DELETED');

CREATE TABLE DOCUMENT_DETAIL
(
    ID               NUMBER(10, 0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE,
    DOCUMENT_ID      NUMBER(10, 0)  NOT NULL,
    NAME             VARCHAR2(100)  NOT NULL,
    DESCRIPTION      VARCHAR2(1000) NOT NULL,
    DETAIL_STATUS_ID NUMBER(10, 0)  NOT NULL,
    X                NUMBER,
    Y                NUMBER,
    OFFSET_X         NUMBER,
    OFFSET_Y         NUMBER,
    OWNER_ID         NUMBER(10, 0)
);


ALTER TABLE DOCUMENT_DETAIL
    ADD PRIMARY KEY (ID);

ALTER TABLE DOCUMENT_DETAIL
    ADD CONSTRAINT FK_DOCUMENT_ID FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENT (ID);

ALTER TABLE DOCUMENT_DETAIL
    ADD CONSTRAINT FK_DETAIL_STATUS_ID FOREIGN KEY (DETAIL_STATUS_ID) REFERENCES DETAIL_STATUS (ID);

ALTER TABLE DOCUMENT_DETAIL
    ADD CONSTRAINT FK_DOCUMENT_DETAIL_OWNER_ID FOREIGN KEY (OWNER_ID) REFERENCES USERS (ID);

CREATE INDEX DD_DOCUMENT_IDX ON DOCUMENT_DETAIL (DOCUMENT_ID);

CREATE INDEX DD_DETAIL_STATUS_IDX ON DOCUMENT_DETAIL (DETAIL_STATUS_ID);

CREATE TABLE PROJECT
(
    ID          NUMBER(10, 0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE,
    NAME        VARCHAR2(100) NOT NULL,
    DESCRIPTION VARCHAR2(1000),
    OWNER_ID    NUMBER(10, 0),
    PRIMARY KEY (ID),
    CONSTRAINT FK_PROJECT_OWNER FOREIGN KEY (OWNER_ID) REFERENCES USERS (ID)
);

CREATE TABLE PROJECT_DETAIL
(
    ID            NUMBER(10, 0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE,
    PROJECT_ID    NUMBER(10, 0)  NOT NULL,
    DOCUMENT_ID   NUMBER(10, 0)  NOT NULL,
    NAME          VARCHAR2(100)  NOT NULL,
    DESCRIPTION   VARCHAR2(1000) NOT NULL,
    SUBSCRIBER_ID NUMBER(10, 0),
    PRIMARY KEY (ID),
    CONSTRAINT FK_PROJECT_ID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID),
    CONSTRAINT FK_PROJECT_DOCUMENT_ID FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENT (ID),
    CONSTRAINT FK_PROJECT_DETAIL_SUBSCRIBER FOREIGN KEY (SUBSCRIBER_ID) REFERENCES USERS (ID)
);

CREATE OR REPLACE VIEW V_DOC_DETAILS AS
SELECT D.ID, D.NAME, DD.OWNER_ID, COUNT(*) NR
FROM DOCUMENT_DETAIL DD
JOIN DOCUMENT D ON D.ID = DD.DOCUMENT_ID
AND DD.DETAIL_STATUS_ID = 2
GROUP BY D.ID, D.NAME, DD.owner_id
order by D.NAME;

CREATE OR REPLACE VIEW V_USER_ROLES_COUNT AS
SELECT NAME, ROUND(NR / TOTAL, 2) * 100 PERCENT
FROM (SELECT NAME, NR, SUM(NR) OVER () TOTAL
FROM (SELECT R.NAME, COUNT(*) NR
FROM USERS U
JOIN USER_ROLES UR ON UR.USER_ID = U.ID
JOIN ROLES R ON R.ID = UR.ROLE_ID
GROUP BY R.NAME));

CREATE OR REPLACE VIEW V_TOTAL_DOCUMENT_DETAILS_COMPLETED_PERCENT AS
SELECT ROUND(COUNT(*) / (25 * (SELECT COUNT(*) FROM DOCUMENT D WHERE D.OWNER_ID = DD.OWNER_ID)) * 100 ,0) PERCENT, OWNER_ID
FROM DOCUMENT_DETAIL DD
WHERE DETAIL_STATUS_ID = 2
GROUP BY OWNER_ID;

CREATE OR REPLACE VIEW V_EACH_TAG_OCCURENCE_COUNT AS
SELECT NAME, COUNT(*) NUMBER_OF_OCCURENCES
FROM DOCUMENT_DETAIL
WHERE DETAIL_STATUS_ID = 2
GROUP BY NAME;

CREATE OR REPLACE VIEW V_TAG_STATUS AS
SELECT COUNT(*) TAG_STATUS_NUMBERS, DS.NAME
FROM DOCUMENT_DETAIL DD JOIN DETAIL_STATUS DS ON DS.ID = DD.DETAIL_STATUS_ID
GROUP BY DS.NAME;
